From d4ed4d8a5a76b37d351b86dea0d73433b325b21f Mon Sep 17 00:00:00 2001
From: harsha843 <159258863+harsha843@users.noreply.github.com>
Date: Sat, 7 Sep 2024 11:57:31 +0530
Subject: [PATCH] Update client3.py

---
 client3.py | 54 +++++++++++++++++++++++++++++++-----------------------
 1 file changed, 31 insertions(+), 23 deletions(-)

diff --git a/client3.py b/client3.py
index 3fc09b7..f29b1c3 100644
--- a/client3.py
+++ b/client3.py
@@ -29,31 +29,39 @@ QUERY = "http://localhost:8080/query?id={}"
 N = 500
 
 
-def getDataPoint(quote):
-    """ Produce all the needed values to generate a datapoint """
-    """ ------------- Update this function ------------- """
-    stock = quote['stock']
-    bid_price = float(quote['top_bid']['price'])
-    ask_price = float(quote['top_ask']['price'])
-    price = bid_price
-    return stock, bid_price, ask_price, price
+def getDataPoint(stock):
+    bid_price = stock['bid']
+    ask_price = stock['ask']
+    # Compute the price using the formula
+    price = (bid_price + ask_price) / 2
+    # Return the data point (assuming other details are included as well)
+    return {'price': price, 'bid': bid_price, 'ask': ask_price}
 
 
 def getRatio(price_a, price_b):
-    """ Get ratio of price_a and price_b """
-    """ ------------- Update this function ------------- """
-    return 1
+    # Avoid division by zero
+    if price_b == 0:
+        return float('inf')  # or handle it as needed
+    else:
+        return price_a / price_b
 
 
-# Main
-if __name__ == "__main__":
-    # Query the price once every N seconds.
-    for _ in iter(range(N)):
-        quotes = json.loads(urllib.request.urlopen(QUERY.format(random.random())).read())
-
-        """ ----------- Update to get the ratio --------------- """
-        for quote in quotes:
-            stock, bid_price, ask_price, price = getDataPoint(quote)
-            print("Quoted %s at (bid:%s, ask:%s, price:%s)" % (stock, bid_price, ask_price, price))
-
-        print("Ratio %s" % getRatio(price, price))
+def main():
+    # Dictionary to store prices
+    prices = {}
+    
+    # Example stock names
+    stock_a = 'AAPL'
+    stock_b = 'GOOG'
+    
+    # Get data points
+    prices[stock_a] = getDataPoint(stock_a)
+    prices[stock_b] = getDataPoint(stock_b)
+    
+    # Extract prices
+    price_a = prices[stock_a]['price']
+    price_b = prices[stock_b]['price']
+    
+    # Get and print the ratio
+    ratio = getRatio(price_a, price_b)
+    print(f"Ratio of {stock_a} to {stock_b}: {ratio}")
-- 
2.45.2.windows.1

